import requests
import re
import json
import socket
import whois
from datetime import datetime
import tldextract
import validators
import tkinter as tk
from tkinter import ttk, messagebox
import http.client

# API Keys
GOOGLE_API_KEY = "YOUR_GOOGLE_API_KEY"
VT_API_KEY = "YOUR_VT_API_KEY"
IOC_API_KEY = "YOUR_IOC_API_KEY"

def check_google_safebrowsing(url):
    # Simulated API Call (Replace with actual request logic)
    return "Safe"

def check_virustotal(url):
    # Simulated API Call (Replace with actual request logic)
    return "Flagged by 3 engines"

def check_ioc_search(url):
    # Simulated API Call (Replace with actual request logic)
    return "PhishTank reports as Malicious"

def get_domain_age(domain):
    # Simulated Domain Age Check
    return "120 days"

def get_domain_ip(domain):
    # Simulated Domain IP Check
    return "192.168.1.1"

def analyze_url():
    url = url_entry.get()
    domain = re.sub(r"https?://(www\.)?", "", url).split('/')[0]
    
    results = [
        ("Google Safe Browsing", check_google_safebrowsing(url)),
        ("VirusTotal", check_virustotal(url)),
        ("IOC Search", check_ioc_search(url)),
        ("Domain Age", get_domain_age(domain)),
        ("Domain IP", get_domain_ip(domain))
    ]
    
    # Clear existing table data
    for row in result_table.get_children():
        result_table.delete(row)
    
    # Insert new results
    for source, verdict in results:
        tag = "safe" if "Safe" in verdict else "malicious" if "Malicious" in verdict else "suspicious"
        result_table.insert("", "end", values=(source, verdict), tags=(tag,))

def setup_ui():
    global url_entry, result_table
    
    root = tk.Tk()
    root.title("Malicious URL Analyzer")
    root.geometry("800x500")
    
    tk.Label(root, text="Enter URL:", font=("Helvetica", 12)).pack(pady=5)
    url_entry = tk.Entry(root, width=60, font=("Helvetica", 12))
    url_entry.pack(pady=5)
    tk.Button(root, text="Analyze", command=analyze_url).pack(pady=5)
    
    columns = ("Source", "Verdict")
    result_table = ttk.Treeview(root, columns=columns, show="headings")
    result_table.heading("Source", text="Source")
    result_table.heading("Verdict", text="Verdict")
    result_table.pack(pady=10, fill="both", expand=True)
    
    result_table.tag_configure("safe", background="lightgreen")
    result_table.tag_configure("suspicious", background="yellow")
    result_table.tag_configure("malicious", background="lightcoral")
    
    root.mainloop()

setup_ui()
